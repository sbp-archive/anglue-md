{"version":3,"sources":["../../src/md-responsive-component.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MAQa,6BAA6B;cAA7B,6BAA6B;;AAC7B,aADA,6BAA6B,GAC1B;;;4BADH,6BAA6B;;AAEtC,iCAFS,6BAA6B,8CAE7B,SAAS,EAAE;;;AAGpB,UAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,UAAA,UAAU,EAAI;AAC7E,YAAI,qBAAQ,UAAU,CAAC,MAAK,QAAQ,CAAC,iBAAiB,CAAC,EAAE;AACvD,gBAAK,QAAQ,CAAC,iBAAiB,CAAC,UAAU,CAAC,CAAC;SAC7C;;AAED,cAAK,UAAU,GAAG,UAAU,CAAC;OAC9B,CAAC,CAAC;KACJ;;iBAZU,6BAA6B;;aAcrB,+BAAG;AACpB,YAAI,IAAI,CAAC,QAAQ,CAAC,QAAQ,iBAAe,IAAI,CAAC,MAAM,CAAC,gBAAgB,QAAK,EAAE;AAC1E,iBAAO,QAAQ,CAAC;SACjB,MAAM,IAAI,IAAI,CAAC,QAAQ,CAAC,QAAQ,MAAI,IAAI,CAAC,MAAM,CAAC,gBAAgB,CAAG,EAAE;AACpE,iBAAO,QAAQ,CAAC;SACjB;AACD,eAAO,SAAS,CAAC;OAClB;;;WAEa,eAAG;AACf,eAAO,IAAI,CAAC,WAAW,CAAC;OACzB;WAEa,aAAC,UAAU,EAAE;AACzB,YAAI,CAAC,QAAQ,GAAG,UAAU,KAAK,QAAQ,CAAC;AACxC,YAAI,CAAC,QAAQ,GAAG,UAAU,KAAK,QAAQ,CAAC;AACxC,YAAI,CAAC,SAAS,GAAG,UAAU,KAAK,SAAS,CAAC;;AAE1C,YAAI,CAAC,WAAW,GAAG,UAAU,CAAC;OAC/B;;;WAjCU,6BAA6B;mBANxC,QAAQ;;;;AA0CH,WAAS,qBAAqB,GAAc;QAAb,MAAM,yDAAG,EAAE;;AAC/C,WAAO,UAAA,GAAG,EAAI;AACZ,UAAM,cAAc,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE;AACvC,wBAAgB,EAAE,GAAG;AACrB,wBAAgB,EAAE,IAAI;AACtB,yBAAiB,EAAE,OAAO;OAC3B,EAAE,MAAM,CAAC,CAAC;;AAEX,wBAjDF,MAAM,GAiDa,CAAC,GAAG,CAAC,SAAS,EAAE,UAAU,CAAC,CAAC;AAC7C,wBAlDF,MAAM,GAkDa,CAAC,GAAG,CAAC,SAAS,EAAE,QAAQ,CAAC,CAAC;;AAE3C,wBAtDF,WAAW,EAsDG,GAAG,EAAE,6BAA6B,EAAE;AAC9C,gBAAQ,EAAE,uBAAuB;AACjC,cAAM,EAAE,cAAc;AACtB,aAAK,EAAE,CAAC,UAAU,EAAE,UAAU,EAAE,WAAW,EAAE,YAAY,CAAC;OAC3D,CAAC,CAAC;KACJ,CAAC;GACH","file":"md-responsive-component.js","sourcesContent":["import {\n  addBehavior,\n  Behavior,\n  Inject as injectDecorator\n} from 'anglue/anglue';\n\nimport angular from 'angular';\n\nexport class MdResponsiveComponentBehavior extends Behavior {\n  constructor() {\n    super(...arguments);\n\n    // Setup watcher to recheck layout on resize\n    this.instance.$scope.$watch(this.determineDeviceType.bind(this), deviceType => {\n      if (angular.isFunction(this.instance.deviceTypeChanged)) {\n        this.instance.deviceTypeChanged(deviceType);\n      }\n\n      this.deviceType = deviceType;\n    });\n  }\n\n  determineDeviceType() {\n    if (this.instance.$mdMedia(`max-width: ${this.config.mobileBreakpoint}px`)) {\n      return 'mobile';\n    } else if (this.instance.$mdMedia(`${this.config.tabletBreakpoint}`)) {\n      return 'tablet';\n    }\n    return 'desktop';\n  }\n\n  get deviceType() {\n    return this._deviceType;\n  }\n\n  set deviceType(deviceType) {\n    this.isMobile = deviceType === 'mobile';\n    this.isTablet = deviceType === 'tablet';\n    this.isDesktop = deviceType === 'desktop';\n\n    this._deviceType = deviceType;\n  }\n}\n\nexport function MdResponsiveComponent(config = {}) {\n  return cls => {\n    const preparedConfig = Object.assign({}, {\n      mobileBreakpoint: 960,\n      tabletBreakpoint: 'lg',\n      desktopBreakpoint: 'gt-lg'\n    }, config);\n\n    injectDecorator()(cls.prototype, '$mdMedia');\n    injectDecorator()(cls.prototype, '$scope');\n\n    addBehavior(cls, MdResponsiveComponentBehavior, {\n      property: 'mdResponsiveComponent',\n      config: preparedConfig,\n      proxy: ['isMobile', 'isTablet', 'isDesktop', 'deviceType']\n    });\n  };\n}\n"]}