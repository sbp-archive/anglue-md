{"version":3,"sources":["../../src/md-drawer-component.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MAMa,yBAAyB;cAAzB,yBAAyB;;AACzB,aADA,yBAAyB,GACtB;4BADH,yBAAyB;;AAElC,iCAFS,yBAAyB,8CAEzB,SAAS,EAAE;;AAEpB,UAAI,CAAC,MAAM,GAAG,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,IAAI,QAAQ,CAAC,CAAC;;AAEzE,UAAI,CAAC,IAAI,EAAE,CAAC;KACb;;iBAPU,yBAAyB;;aAShC,gBAAG;;;AACL,YAAI,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,YAAM;AAC5B,gBAAK,QAAQ,CAAC,MAAM,CAAC,GAAG,CAAC,UAAU,EAAE,MAAK,SAAS,CAAC,IAAI,OAAM,CAAC,CAAC;AAChE,gBAAK,QAAQ,CAAC,MAAM,CAAC,MAAM,CAAC;mBAAM,MAAK,MAAM,CAAC,MAAM,EAAE;WAAA,EAAE,UAAC,MAAM,EAAE,OAAO,EAAK;AAC3E,gBAAI,CAAC,MAAM,IAAI,OAAO,EAAE;AACtB,oBAAK,YAAY,EAAE,CAAC;aACrB;WACF,CAAC,CAAC;SACJ,CAAC,CAAC;OACJ;;;aAEI,iBAAG;AACN,YAAI,CAAC,cAAc,GAAG,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,KAAK,EAAE,CAAC;AAC/C,YAAI,CAAC,YAAY,EAAE,CAAC;AACpB,eAAO,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC;OACpC;;;aAEW,wBAAG;AACb,YAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,UAAU,IAAI,GAAG,CAAC,CAAC;OACxD;;;aAEQ,qBAAG;;;AACV,YAAI,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,IAAI,CAAC,YAAM;AAC7B,cAAI,OAAK,cAAc,EAAE;AACvB,mBAAK,cAAc,CAAC,OAAO,EAAE,CAAC;WAC/B;SACF,CAAC,CAAC;OACJ;;;WApCU,yBAAyB;mBAJpC,QAAQ;;;;AA2CH,WAAS,iBAAiB,GAAc;QAAb,MAAM,yDAAG,EAAE;;AAC3C,WAAO,UAAA,GAAG,EAAI;AACZ,UAAM,cAAc,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE;AACvC,kBAAU,EAAE,GAAG;OAChB,EAAE,MAAM,CAAC,CAAC;;AAEX,wBAhDF,MAAM,GAgDa,CAAC,GAAG,CAAC,SAAS,EAAE,YAAY,CAAC,CAAC;AAC/C,wBAjDF,MAAM,GAiDa,CAAC,GAAG,CAAC,SAAS,EAAE,QAAQ,CAAC,CAAC;AAC3C,wBAlDF,MAAM,GAkDa,CAAC,GAAG,CAAC,SAAS,EAAE,QAAQ,CAAC,CAAC;AAC3C,wBAnDF,MAAM,GAmDa,CAAC,GAAG,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;;AAEvC,wBAvDF,WAAW,EAuDG,GAAG,EAAE,yBAAyB,EAAE;AAC1C,gBAAQ,EAAE,mBAAmB;AAC7B,cAAM,EAAE,cAAc;AACtB,aAAK,EAAE,CAAC,mBAAmB,CAAC;OAC7B,CAAC,CAAC;KACJ,CAAC;GACH","file":"md-drawer-component.js","sourcesContent":["import {\n  addBehavior,\n  Behavior,\n  Inject as injectDecorator\n} from 'anglue/anglue';\n\nexport class MdDrawerComponentBehavior extends Behavior {\n  constructor() {\n    super(...arguments);\n\n    this.drawer = this.instance.$mdSidenav(this.config.drawerId || 'drawer');\n\n    this.open();\n  }\n\n  open() {\n    this.drawer.open().then(() => {\n      this.instance.$scope.$on('$destroy', this.onDestroy.bind(this));\n      this.instance.$scope.$watch(() => this.drawer.isOpen(), (isOpen, wasOpen) => {\n        if (!isOpen && wasOpen) {\n          this.doCloseRoute();\n        }\n      });\n    });\n  }\n\n  close() {\n    this.destroyPromise = this.instance.$q.defer();\n    this.doCloseRoute();\n    return this.destroyPromise.promise;\n  }\n\n  doCloseRoute() {\n    this.instance.$state.go(this.config.closeRoute || '^');\n  }\n\n  onDestroy() {\n    this.drawer.close().then(() => {\n      if (this.destroyPromise) {\n        this.destroyPromise.resolve();\n      }\n    });\n  }\n}\n\nexport function MdDrawerComponent(config = {}) {\n  return cls => {\n    const preparedConfig = Object.assign({}, {\n      closeRoute: '^'\n    }, config);\n\n    injectDecorator()(cls.prototype, '$mdSidenav');\n    injectDecorator()(cls.prototype, '$state');\n    injectDecorator()(cls.prototype, '$scope');\n    injectDecorator()(cls.prototype, '$q');\n\n    addBehavior(cls, MdDrawerComponentBehavior, {\n      property: 'mdDrawerComponent',\n      config: preparedConfig,\n      proxy: ['closeDrawer:close']\n    });\n  };\n}\n"]}